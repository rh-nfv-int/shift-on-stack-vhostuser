#!/bin/bash

# NOTE: jq is present in the coreos worker created, find if available in all versions

set -e
if [[ "$#" -lt 1 ]]; then
    echo "Nework ID not provided, nothing to do"
    exit
fi

source /etc/vhostuser-bind.conf

NW_DATA="/var/config/openstack/latest/network_data.json"
if [ ! -f ${NW_DATA} ]; then
    echo "Network data file not found, trying to download it from nova metadata"
    if ! curl http://169.254.169.254/openstack/latest/network_data.json > /tmp/network_data.json; then
        echo "Failed to download network data file"
        exit 1
    fi
    NW_DATA="/tmp/network_data.json"
fi
function parseNetwork() {
    local nwid=$1
    local pcis=()
    echo "Network ID is $nwid"
    links=$(jq '.networks[] | select(.network_id == "'$nwid'") | .link' $NW_DATA)
    if [ ${#links} -gt 0 ]; then
        for link in $links; do
            echo "Link Name: $link"
            mac=$(jq -r '.links[] | select(.id == '$link') | .ethernet_mac_address'  $NW_DATA)
            if [ -n $mac ]; then
                pci=$(bindDriver $mac)
                pci_ret=$?
                if [[ "$pci_ret" -eq 0 ]]; then
                    echo "$pci bind succesful"
                fi
            fi
        done
    fi
}

function bindDriver() {
    local mac=$1
    for file in /sys/class/net/*; do
        dev_mac=$(cat $file/address)
        if [[ "$mac" == "$dev_mac" ]]; then
            name=${file##*\/}
            bus_str=$(ethtool -i $name | grep bus)
            dev_t=${bus_str#*:}
            dev=${dev_t#[[:space:]]}

            echo $dev

            devlink="/sys/bus/pci/devices/$dev"
            syspath=$(realpath "$devlink")
            if [ ! -f "$syspath/driver/unbind" ]; then
                echo "File $syspath/driver/unbind not found"
                return 1
            fi
            if ! echo "$dev">"$syspath/driver/unbind"; then
                return 1
            fi

            if [ ! -f "$syspath/driver_override" ]; then
                echo "File $syspath/driver_override not found"
                return 1
            fi
            if ! echo "vfio-pci">"$syspath/driver_override"; then
                return 1
            fi

            if [ ! -f "/sys/bus/pci/drivers/vfio-pci/bind" ]; then
                echo "File /sys/bus/pci/drivers/vfio-pci/bind not found"
                return 1
            fi
            if ! echo "$dev">"/sys/bus/pci/drivers/vfio-pci/bind"; then
              return 1
            fi
            return 0
        fi
    done
    return 1
}

for nwid in "$@"; do
    parseNetwork $nwid
done
